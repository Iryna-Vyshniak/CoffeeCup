{"mappings":"AAEA,MAAMA,EAAMC,SAASC,cAAc,QAC7BC,EAAUF,SAASC,cAAc,qBACjCE,EAAYH,SAASC,cAAc,gBACzCG,QAAQC,IAAIF,GAIZD,EAAQI,iBAAiB,SAAS,KAChCJ,EAAQK,UAAUC,OAAO,UACzBT,EAAIQ,UAAUC,OAAO,SAAS,IAKhC,MA4CMC,EAAiBC,GACrBA,aAAA,EAAAA,EAAKC,QAAO,CAACC,EAAQC,IAASD,EA7CP,GAACE,KACxBA,EAAIC,QACJA,EAAOC,YACPA,EACAC,QAAQC,YAAEA,EAAWC,aAAEA,MACR,ycAQkDJ,uDACpBD,iFAE5BE,wFAGqBI,EAAa,gsBAkBpCC,EAAeH,uHAGhBI,EAAgBH,+CAKSI,CAAiBV,IAAO,IAI3DO,EAAeI,GACZC,KAAKC,MAAMD,KAAKE,SAAWH,EAAM,GAGpCI,EAAa5B,SAASC,cAAc,iBAUjC4B,MACL,sGAVY,CACdC,OAAQ,MACRC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,mCASlBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IArBW,IAAAzB,EAsBfN,QAAQC,IAAI8B,GAtBGzB,EAuBFyB,EAvBUP,EAAWQ,UAAY3B,EAAeC,GA2B7D,MAAM2B,EAAmBrC,SAASsC,iBAAiB,qBAC7CC,EAAevC,SAASsC,iBAAiB,gBACzCE,EAAiBxC,SAASsC,iBAAiB,cAEjD,IAAIG,EACAC,EACAC,EAEJ,MAQMC,EAAiB,CAACpC,EAAQqC,EAAcC,KAC5CtC,EAAOuC,aAAa,gBAAiB,SACrCF,EAAatC,UAAUC,OAAO,eAC9BsC,EAAUvC,UAAUC,OAAO,aAC3BsC,EAAUE,gBAAgB,WAAW,EAGvCX,EAAiBY,SAAQC,IAEvBP,EAAYO,EAAUC,cAAcC,mBACpCF,EAAUH,aAAa,gBAAiB,SACxCG,EAAUH,aAAa,gBAAiBJ,EAAUU,IAElDH,EAAU5C,iBAAiB,SAASgD,IArBhB,IAAST,EAAcC,EAsBzCL,EAASa,EAAEC,OACXb,EAAeD,EAAOU,cACtBR,EAAYD,EAAaU,mBAGoB,UAAzCX,EAAOe,aAAa,kBAEtBhB,EAAeS,SAAQQ,IAChBA,EAAclD,UAAUmD,SAAS,eACpCC,iBAAmBF,EAAcG,uBACjCC,WACEF,iBAAiB1D,cAAc,qBAEjC2C,EAAeiB,WAAYF,iBAAkBF,G,IAnCxBZ,EAuCHH,EAvCiBI,EAuCHH,EAAtBF,EAtCXM,aAAa,gBAAiB,QACrCF,EAAatC,UAAUC,OAAO,eAC9BsC,EAAUvC,UAAUC,OAAO,aAE3BsC,EAAUC,aAAa,WAAY,MAoC/BH,EAAeH,EAAQC,EAAcC,EAAU,GAEjD,IAGJJ,EAAaU,SAAQa,IACnBA,EAAMxD,iBAAiB,SAASgD,IAC9BX,EAAYW,EAAEC,OAAOJ,cACrBT,EAAeY,EAAEC,OAAOJ,cAAcS,uBACtCnB,EAASC,EAAazC,cAAc,qBAEpC2C,EAAeH,EAAQC,EAAcC,GACrCF,EAAOsB,OAAO,GACd,GACF,IAEHC,OAAMC,GAAO7D,QAAQ8D,MAAMD,KAKhC,MAAM5C,EAAiBX,GACrBA,EACGyD,KAAItD,IACH,IAAIuD,EAAM,GACV,IAAK,MAAMC,KAAOC,OAAOC,KAAK1D,GAC5BuD,GAAO,+BAA+BC,MAAQxD,EAAKwD,UAErD,OAAOD,CAAG,IAEXI,KAAK,KAEJlD,EAAkBZ,GACtBA,EAAIyD,KAAI,CAACtD,EAAM4D,IAAQ,mBAAmBA,EAAM,MAAM5D,UAAY2D,KAAK","sources":["src/app/index.js"],"sourcesContent":["//import { closeQuickView, openQuickView } from './viewCard';\n\nconst nav = document.querySelector('.nav');\nconst menuBtn = document.querySelector('.header__menu-btn');\nconst searchbox = document.querySelector('[data-input]');\nconsole.log(searchbox);\n\n// Sets the nav and menuBtn.\n// Add click event listener to the menu. Toggle the active and active state of the menu.\nmenuBtn.addEventListener('click', () => {\n  menuBtn.classList.toggle('active');\n  nav.classList.toggle('active');\n});\n\n// search\n\nconst createCoffeeCard = ({\n  name,\n  cupSize,\n  description,\n  recipe: { ingredients, instructions },\n}) => /* html */ ` <li class=\"services__item card\">\n              <div class=\"card-image\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1561882468-9110e03e0f78?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1287&q=80\"\n                  alt=\"food\"\n                />\n              </div>\n              <div class=\"card-text\">\n                 <p class=\"text\" class=\"card-meal-type\">cupSize: ${cupSize}</p>\n                <h2 class=\"card-title title\">${name}</h2>\n                 <p class=\"text\" class=\"card-body\">\n                 ${description}\n                </p>\n              </div>\n              <div class=\"card-price\">${randomNumber(10)}$</div>\n\n               <p class=\"text\">1</p>\n              <button\n                type=\"button\"\n                class=\"btn services__btn-view\"\n                data-quick-view\n              >\n                Quick view\n              </button>\n            </li>\n            <!-- hidden block -->\n            <li class=\"services__item services__item-view is-hidden\" id=\"quickview-01\">\n              <button type=\"button\" class=\"btn services__btn-close\" data-close>\n                Close 1\n              </button>\n               <p class=\"text-title title recipe\">Recipe</p>\n               <div class=\"text-ingredients\"><p class=\"text-title title\">Ingredients:\n               ${getIngredients(ingredients)}\n              </div>\n               <div class=\"text\"><p class=\"text-title title\">Instructions:\n              ${getInstructions(instructions)}\n               </div>\n            </li>`;\n\nconst generateMarkup = arr =>\n  arr?.reduce((markup, item) => markup + createCoffeeCard(item), '');\n\nconst insertMarkup = arr => (coffeeList.innerHTML = generateMarkup(arr));\n\nconst randomNumber = max => {\n  return Math.floor(Math.random() * max + 1);\n};\n\nconst coffeeList = document.querySelector('[data-coffee]');\nconst options = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': 'a41b6c96efmshd5b88ff78c43fc6p16e7fcjsnd8e43058f641',\n    'X-RapidAPI-Host': 'the-coffee-api.p.rapidapi.com',\n  },\n};\n\nconst searchCoffee = query => {\n  return fetch(\n    'https://the-coffee-api.p.rapidapi.com/drinks/latte?keys=description%2ChasAlcohol%2CcupSize%2Crecipe',\n    options\n  )\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      insertMarkup(data);\n\n      // open-hidden coffee-card\n\n      const quickViewButtons = document.querySelectorAll('[data-quick-view]');\n      const closeButtons = document.querySelectorAll('[data-close]');\n      const fullwidthCards = document.querySelectorAll('.fullwidth');\n\n      let toggle; // Quick view <button>.\n      let toggleParent; // <li>.\n      let fullwidth; // Fullwidth card to be \"injected\".\n\n      const openQuickView = (toggle, toggleParent, fullwidth) => {\n        toggle.setAttribute('aria-expanded', 'true');\n        toggleParent.classList.toggle('is-selected');\n        fullwidth.classList.toggle('is-hidden');\n        // Make fullwidth card keyboard focusable.\n        fullwidth.setAttribute('tabIndex', '0');\n      };\n\n      const closeQuickView = (toggle, toggleParent, fullwidth) => {\n        toggle.setAttribute('aria-expanded', 'false');\n        toggleParent.classList.toggle('is-selected');\n        fullwidth.classList.toggle('is-hidden');\n        fullwidth.removeAttribute('tabIndex');\n      };\n\n      quickViewButtons.forEach(quickView => {\n        // Add appropriate ARIA attributes for \"toggle\" behaviour.\n        fullwidth = quickView.parentElement.nextElementSibling;\n        quickView.setAttribute('aria-expanded', 'false');\n        quickView.setAttribute('aria-controls', fullwidth.id);\n\n        quickView.addEventListener('click', e => {\n          toggle = e.target;\n          toggleParent = toggle.parentElement;\n          fullwidth = toggleParent.nextElementSibling;\n\n          // Open (or close) fullwidth card.\n          if (toggle.getAttribute('aria-expanded') === 'false') {\n            // Do we have another fullwidth card already open? If so, close it.\n            fullwidthCards.forEach(fullwidthOpen => {\n              if (!fullwidthOpen.classList.contains('is-hidden')) {\n                toggleParentOpen = fullwidthOpen.previousElementSibling;\n                toggleOpen =\n                  toggleParentOpen.querySelector('[data-quick-view]');\n\n                closeQuickView(toggleOpen, toggleParentOpen, fullwidthOpen);\n              }\n            });\n\n            openQuickView(toggle, toggleParent, fullwidth);\n          } else {\n            closeQuickView(toggle, toggleParent, fullwidth);\n          }\n        });\n      });\n\n      closeButtons.forEach(close => {\n        close.addEventListener('click', e => {\n          fullwidth = e.target.parentElement;\n          toggleParent = e.target.parentElement.previousElementSibling;\n          toggle = toggleParent.querySelector('[data-quick-view]');\n\n          closeQuickView(toggle, toggleParent, fullwidth);\n          toggle.focus(); // Return keyboard focus to \"toggle\" button.\n        });\n      });\n    })\n    .catch(err => console.error(err));\n};\n\nsearchCoffee('latte');\n\nconst getIngredients = arr =>\n  arr\n    .map(item => {\n      let ing = '';\n      for (const key of Object.keys(item)) {\n        ing += `<p class=\"text ingredients\">${key}: ${item[key]};</p>`;\n      }\n      return ing;\n    })\n    .join(' ');\n\nconst getInstructions = arr =>\n  arr.map((item, idx) => `<p class=\"text\">${idx + 1}. ${item}</p>`).join(' ');\n"],"names":["$817a9da4d8bd6512$var$nav","document","querySelector","$817a9da4d8bd6512$var$menuBtn","$817a9da4d8bd6512$var$searchbox","console","log","addEventListener","classList","toggle","$817a9da4d8bd6512$var$generateMarkup","arr","reduce","markup","item","name","cupSize","description","recipe","ingredients","instructions","$817a9da4d8bd6512$var$randomNumber","$817a9da4d8bd6512$var$getIngredients","$817a9da4d8bd6512$var$getInstructions","$817a9da4d8bd6512$var$createCoffeeCard","max","Math","floor","random","$817a9da4d8bd6512$var$coffeeList","fetch","method","headers","then","response","json","data","innerHTML","quickViewButtons","querySelectorAll","closeButtons","fullwidthCards","toggle1","toggleParent1","fullwidth1","closeQuickView","toggleParent","fullwidth","setAttribute","removeAttribute","forEach","quickView","parentElement","nextElementSibling","id","e","target","getAttribute","fullwidthOpen","contains","toggleParentOpen","previousElementSibling","toggleOpen","close","focus","catch","err","error","map","ing","key","Object","keys","join","idx"],"version":3,"file":"index.e2aa7f7a.js.map"}